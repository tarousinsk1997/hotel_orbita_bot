version: '3.8'
services:

  redis-storage:
    image: redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    command: ["redis-server", "--appendonly", "no", "--maxmemory", "500mb", "--maxmemory-policy", "allkeys-lru"]
    restart: always
    networks:
      - proxy_network
    # ports:
    #   - "6379:6379"
    # expose:
    #   - "6379"

  aiohttp:
    # Путь до Dockerfile
    build: ./app
    # Имя для создаваемого контейнера
    container_name: backend-aiohttp
    # Создание переменных окружения в контейнере

    env_file:
      - variables.env
      ##
    # Перезапускаем сервис в случае падения 
    restart: no
    # extra_hosts:
    # - "host.docker.internal:host-gateway"
    # Прокладывам путь для файлов. Все файлы, которые хранятся у вас в 
    # директории ./backend, появятся в директории контейнера /backend
    volumes:
      - ./database/tgbot_database.db:/database
      - ./database/bot_log.log:/database
    # Открываем порт в контейнер
    # Порт, который будет смотреть наружу : порт который используется внутри контейнера
    # ports:
    #   - "8443:8443"
    depends_on: 
      redis-storage:
        condition: service_started
  
    command: python -u main.py
    networks:
      - proxy_network

networks:
  proxy_network:
    name: proxy_net
    external: true
      





  

