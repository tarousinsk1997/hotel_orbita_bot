from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton


import locale

from callback_handlers.callback_classes import MyCallback_rest, MyCallback_jazz_club, MyCallback_event_picker_left_right_arrow, \
      MyCallback_jazz_club_back, MyCallback_event_picker_event_picked, MyCallback_event_picker_event_picked_back, \
      MyCallback_table_picker, MyCallback_rest_back, MyCallback_table_picker_confirmed, MyCallback_successfull_payment_picker_left_right_arrow, \
      MyCallback_successfull_payment_get_qr_code

locale.setlocale(locale.LC_TIME, 'ru_RU.UTF-8')


# –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–∞–∑–¥–µ–ª–æ–≤ inline
inline_btn_1 = InlineKeyboardButton(text='üè° –ì–æ—Å—Ç–∏–Ω–∏—Ü–∞', callback_data='__')
inline_btn_2 = InlineKeyboardButton(text='üçó –†–µ—Å—Ç–æ—Ä–∞–Ω', callback_data=MyCallback_rest(button_descriptor='to_rest_main_kb').pack())
inline_btn_3 = InlineKeyboardButton(text='üé∑ –û—Ä–±–∏—Ç–∞ –î–∂–∞–∑ –ö–ª—É–±', callback_data=MyCallback_jazz_club(button_descriptor='to_club_main_kb').pack())
inline_kb_main = InlineKeyboardMarkup(inline_keyboard=[[inline_btn_3], [inline_btn_1, inline_btn_2]])


inline_btn_main = InlineKeyboardButton(text='', callback_data='button1')


#Reply –∫–Ω–æ–ø–∫–∞ –º–µ–Ω—é

reply_main_button = KeyboardButton(text='üè°–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
reply_main_markup = ReplyKeyboardMarkup(keyboard=[[reply_main_button]], resize_keyboard=True)


# —Ä–∞–∑–¥–µ–ª –†–µ—Å—Ç–æ—Ä–∞–Ω 2

inline_btn_2_1 = InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data=MyCallback_jazz_club_back(button_descriptor='to_main_kb').pack())
inline_btn_2_2 = InlineKeyboardButton(text='üõí–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞', callback_data=MyCallback_rest(button_descriptor='to_rest_booking').pack())
inline_btn_2_3 = InlineKeyboardButton(text='üçì–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é', callback_data=MyCallback_rest(button_descriptor='show_rest_links').pack())
inline_kb_2 = InlineKeyboardMarkup(inline_keyboard=[[inline_btn_2_3], [inline_btn_2_1]])

#—Ä–∞–∑–¥–µ–ª –º–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ 2.1

inline_btn_2_3_1 = InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data=MyCallback_rest_back(button_descriptor='to_rest_main_kb').pack())
inline_btn_2_3_2 = InlineKeyboardButton(text='üçï –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é', url="https://telegra.ph/Menyu-restorana-Orbita-11-09")
inline_btn_2_3_3 = InlineKeyboardButton(text='üç∑ –í–∏–Ω–Ω–∞—è –∫–∞—Ä—Ç–∞', url="https://telegra.ph/Vinnaya-karta-restorana-Orbita-11-09")
inline_btn_2_3_4 = InlineKeyboardButton(text='üç∏ –ú–µ–Ω—é –ö–æ–∫—Ç–µ–π–ª–µ–π', url="https://telegra.ph/Koktejli-11-18")
inline_kb_2_3 = InlineKeyboardMarkup(inline_keyboard=[[inline_btn_2_3_2], [inline_btn_2_3_3, inline_btn_2_3_4], [inline_btn_2_3_1]])




# —Ä–∞–∑–¥–µ–ª –û—Ä–±–∏—Ç–∞ –î–∂–∞–∑ 3

inline_btn_3_1 = InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data=MyCallback_jazz_club_back(button_descriptor='to_main_kb').pack())
inline_btn_3_2 = InlineKeyboardButton(text='–ê–Ω–æ–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', callback_data=MyCallback_jazz_club(button_descriptor='to_event_review').pack())
inline_btn_3_3 = InlineKeyboardButton(text='–ú–æ–∏ –∑–∞—è–≤–∫–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è', callback_data=MyCallback_jazz_club(button_descriptor='my_orders').pack())


inline_kb_3 = InlineKeyboardMarkup(inline_keyboard=[[inline_btn_3_2], [inline_btn_3_3], [inline_btn_3_1]])


# —Ä–∞–∑–¥–µ–ª –∑–∞—è–≤–æ–∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
inline_btn_3_4_1 = InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data=MyCallback_jazz_club_back(button_descriptor='to_club_main_kb').pack())
inline_btn_3_4_2 = InlineKeyboardButton(text='üöÆ –û–ø–ª–∞—á–µ–Ω–Ω—ã–µ (–∞—Ä—Ö–∏–≤–Ω—ã–µ)', callback_data=MyCallback_jazz_club(button_descriptor='archive_payment').pack())
inline_btn_3_4_4 = InlineKeyboardButton(text='‚úÖ –û–ø–ª–∞—á–µ–Ω–Ω—ã–µ (–∞–∫—Ç–∏–≤–Ω—ã–µ)', callback_data=MyCallback_jazz_club(button_descriptor='successfull_payment').pack())
inline_btn_3_4_5 = InlineKeyboardButton(text='üóô –û—Ç–º–µ–Ω–∞ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è', callback_data=MyCallback_jazz_club(button_descriptor='refund').pack())


inline_kb_3_4 = InlineKeyboardMarkup(inline_keyboard=[[inline_btn_3_4_4], [inline_btn_3_4_2], [inline_btn_3_4_5], [inline_btn_3_4_1]])


#–∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å

inline_btn_admin_analytics = InlineKeyboardButton(text='üßÆ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞', callback_data='button_0_1')
inline_btn_admin_operator = InlineKeyboardButton(text='–û–ø–µ—Ä–∞—Ç–æ—Ä', callback_data='button_0_2')
inline_kb_admin = InlineKeyboardMarkup(inline_keyboard=[[inline_btn_admin_analytics], [inline_btn_admin_operator]])



#—Ä–µ–∂–∏–º –≤–∞–ª–∏–¥–∞—Ü–∏–∏ qr-–∫–æ–¥–∞ operator_1

inline_btn_admin_operator_1 = InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data='button_0_2_1')
inline_btn_admin_operator_2 = InlineKeyboardButton(text='–†–µ–∂–∏–º –í–∞–ª–∏–¥–∞—Ü–∏–∏ QR', callback_data='button_0_2_2')
inline_kb_operator_validator = InlineKeyboardMarkup(inline_keyboard=[[inline_btn_admin_operator_1], [inline_btn_admin_operator_2]])





#—Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤—ã–±–æ—Ä–∞ –∏–≤–µ–Ω—Ç–∞ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

def gen_event_picker_kb(event_URL, event_id) -> InlineKeyboardMarkup:
    button_URL = InlineKeyboardButton(text='–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', url=event_URL)
    button_arrow_right = InlineKeyboardButton(text="‚û°", callback_data=MyCallback_event_picker_left_right_arrow(arrow_type='right').pack())
    button_arrow_left = InlineKeyboardButton(text="‚¨Ö", callback_data=MyCallback_event_picker_left_right_arrow(arrow_type='left').pack())
    button_choose_table = InlineKeyboardButton(text='–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞', callback_data=MyCallback_event_picker_event_picked(valid=True, event_id=event_id).pack())
    button_back = InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=MyCallback_jazz_club_back(button_descriptor='to_club_main_kb').pack())

    event_list_kb_markup = InlineKeyboardMarkup(inline_keyboard=[[button_URL],[button_arrow_left, button_arrow_right], [button_choose_table], [button_back]])
    return event_list_kb_markup


#—Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤—ã–±–æ—Ä–∞ —Å—Ç–æ–ª–∞ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

def gen_table_picker_kb(table_list, chosen_event_id) -> InlineKeyboardButton:
    keyboard_row = []
    keyboard_col = []
    col_counter = 0
    elem_counter = 0
    button_back = InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=MyCallback_event_picker_event_picked_back(valid=True, event_id=chosen_event_id).pack())

    for elem in table_list:
        col_counter += 1
        button = InlineKeyboardButton(text=elem['–ú–µ—Å—Ç–æ'].replace('_', ' '), callback_data=MyCallback_table_picker(valid=True, seat=elem['–ú–µ—Å—Ç–æ'], event_id=chosen_event_id).pack())
        keyboard_col.append(button)
        if col_counter % 4 == 0:
            keyboard_col_copy = keyboard_col.copy()
            keyboard_row.append(keyboard_col_copy)
            keyboard_col.clear()
            col_counter = 0
        elem_counter += 1
        if elem_counter == len(table_list) and len(keyboard_col) != 0:
            keyboard_row.append(keyboard_col)

    keyboard_row.append([button_back])
    table_list_kb_markup = InlineKeyboardMarkup(inline_keyboard=keyboard_row)
    return (table_list_kb_markup)


#–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –î–∞/–ù–µ—Ç

def get_yes_no_kb(seat, event_id) -> InlineKeyboardMarkup:
    
    button_yes = InlineKeyboardButton(text="–î–∞", callback_data=MyCallback_table_picker_confirmed(confirmed=True, seat=seat, event_id=event_id).pack())
    button_no = InlineKeyboardButton(text="–ù–µ—Ç", callback_data=MyCallback_table_picker_confirmed(confirmed=False, seat=seat, event_id=event_id).pack())
    yes_no_kb = InlineKeyboardMarkup(inline_keyboard=[[button_yes, button_no]])
    return yes_no_kb

#–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å—Å—ã–ª–æ–∫

def get_url_button_inline_markup(text:str, URL:str) ->InlineKeyboardMarkup:
    inline_markup = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text=text, url=URL)]])
    return inline_markup


def get_success_payments_kb(QR_code, event_id, order_id):
    button_arrow_right = InlineKeyboardButton(text="‚û°", callback_data=MyCallback_successfull_payment_picker_left_right_arrow(arrow_type='right').pack())
    button_arrow_left = InlineKeyboardButton(text="‚¨Ö", callback_data=MyCallback_successfull_payment_picker_left_right_arrow(arrow_type='left').pack())
    button_get_qr = InlineKeyboardButton(text='–ü–æ–ª—É—á–∏—Ç—å QR-–∫–æ–¥', callback_data=MyCallback_successfull_payment_get_qr_code(valid=True, qr_code=QR_code, event_id=event_id, order_id=order_id).pack())
    button_back = InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=MyCallback_jazz_club_back(button_descriptor='my_orders').pack())

        
    inline_markup = InlineKeyboardMarkup(inline_keyboard=[[button_arrow_left, button_arrow_right], [button_get_qr], [button_back]])

    return inline_markup


def back_payments_inline_markup():
    back_button = InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=MyCallback_jazz_club_back(button_descriptor='successfull_payment').pack())
    markup = InlineKeyboardMarkup(inline_keyboard=[[back_button]])
    return markup


def request_phone_kb():
    request_button_yes = KeyboardButton(text='üì±–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', request_contact=True)
    request_button_no = KeyboardButton(text='–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
    return ReplyKeyboardMarkup(keyboard=[[request_button_yes], [request_button_no]], one_time_keyboard=True, resize_keyboard=True)


def get_existing_order_check_keyboard(chosen_event_id, event_URL, seat):
    button_back = InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Å—Ç–æ–ª–æ–≤", callback_data=MyCallback_event_picker_event_picked(valid=True, event_id=chosen_event_id).pack())
    button_pay_old = InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ—Ä–¥–µ—Ä", url=event_URL)
    button_pay_new = InlineKeyboardButton(text="üíµ–û–ø–ª–∞—Ç–∏—Ç—å –Ω–æ–≤—ã–π –æ—Ä–¥–µ—Ä", callback_data=MyCallback_table_picker_confirmed(confirmed=True, seat=seat, event_id=chosen_event_id).pack())
    markup = InlineKeyboardMarkup(inline_keyboard=[[button_pay_new], [button_pay_old], [button_back]])
    return markup
